public class PickfromBothSides {
    public int solve(int[] A, int B) {
        int n = A.length;
        int[] pre = new int[n];

        pre[0] = A[0];
        for (int i = 1; i < n; i++) {
            pre[i] = pre[i - 1] + A[i];
        }
        
        int ans = 0;
        if (B == n){
            ans = pre[n-1];
        }
        else {
            ans = pre[n-1] - pre[n-B-1];
        }
        int i = 0;
        for (int j = n - B + 1; j < n; j++) {
            int startSum = pre[i];
            int endSum = pre[n-1]-pre[j-1];
            ans = Math.max(ans, startSum+endSum);
            i++;
        }
        return ans;
    }

    public static void main(String[] args) {
        int[] arr = {-533, -666, -500, 169, 724, 478, 358, -38, -536, 705, -855, 281, -173, 961, -509, -5, 942, -173, 436, -609, -396, 902, -847, -708, -618, 421, -284, 718, 895, 447, 726, -229, 538, 869, 912, 667, -701, 35, 894, -297, 811, 322, -667, 673, -336, 141, 711, -747, -132, 547, 644, -338, -243, -963, -141, -277, 741, 529, -222, -684, 35, -810, 842, -712, -894, 40, -58, 264, -352, 446, 805, 890, -271, -630, 350, 6, 101, -607, 548, 629, -377, -916, 954, -244, 840, -34, 376, 931, -692, -56, -561, -374, 323, 537, 538, -882, -918, -71, -459, -167, 115, -361, 658, -296, 930, 977, -694, 673, -614, 21, -255, -76, 72, -730, 829, -223, 573, 97, -488, 986, 290, 161, -364, -645, -233, 655, 574, -969, -948, 350, 150, -59, 724, 966, 430, 107, -809, -993, 337, 457, -713};
        System.out.println(solve(arr, 118));
    }
}
